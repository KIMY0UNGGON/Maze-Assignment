package Maze;

public class MapNode {
	private int stage;
	private boolean goal;
	private MapNode Left,Mid,Right;
	public boolean L,M,R;
	public boolean getGoal() {return goal;}
	public MapNode(int stage) {
		this.stage = stage;
		if(stage > 50 && (int)(Math.random()*10) < 5) {
			goal = true;
		}
		else if(stage == 55) {
			goal = true;
		}
		L = ((int)(Math.random()*3) == 0);
		M = ((int)(Math.random()*3) == 0);
		R = ((int)(Math.random()*3) == 0);
		if(!L&&!M&&!R) {
			switch((int)(Math.random()*3)) {
			case 0 -> L = true;
			case 1 -> M = true;
			case 2 -> R = true;
			}
		}
	}
	public boolean getNode(int vect) {
		return switch(vect) {
		case 0 -> L;
		case 1 -> M;
		case 2 -> R;
		default -> false;
		};
	}
	public void move() {

	
		Left = L ? new MapNode(++stage) : null;
		
		Mid = M? new MapNode(++stage):null;
			
		Right = R? new MapNode(++stage):null;
		
		}
	}
	public MapNode getMap(int n) { //0은 left, 1은 mid 2는 right
		return switch(n) {
		case 0 -> Left;
		case 1 -> Mid;
		case 2 -> Right;
		default -> null;
		};
		
	}
	public int getStage()
	{
		return stage;
	}
}
